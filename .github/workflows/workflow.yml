name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - run: >
          ARTIFACT_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts?name=allure-results"
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts/$ARTIFACT_ID/zip
          -o artifacts.zip &&
          REPORT_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts?name=github-pages"
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts/$REPORT_ID/zip
          -o pages.zip
      - run: mkdir allure-results
      - run: unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}
          path:
            allure-results
          retention-days: 5

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Download Allure history
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results
        continue-on-error: true

      - name: Run tests and collect Allure results
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true

      - name: Store new Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 5

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate Allure Report
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Install Allure
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          tar -zxvf allure-2.23.1.tgz -C /opt/
          ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure Report
        run: |
          mkdir -p allure-history
          cp -r allure-results/history allure-history || true  # Переносим историю трендов
          allure generate allure-results --clean -o _site
          cp -r allure-history _site/history  # Добавляем историю в новый отчет

      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 5
          overwrite: true

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    environment:
      name: github-pages  # Окружение для деплоя
    steps:
      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: _site/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4