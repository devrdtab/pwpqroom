name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: "Run All Tests"
        type: choice
        options:
          - "Run All Tests"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Fetch Allure Results Artifact
        run: |
          echo "Fetching Allure Results Artifact..."

          RESPONSE=$(curl -s -L -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts")

          echo "API Response: $RESPONSE"

          ARTIFACT_ID=$(echo "$RESPONSE" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['artifacts'][0]['id']) if 'artifacts' in data and data['artifacts'] else ''")

          if [[ -z "$ARTIFACT_ID" ]]; then
            echo "No Allure results artifact found. Skipping download."
            exit 0
          fi

          echo "Downloading artifact ID: $ARTIFACT_ID"

          rm -f artifacts.zip
          curl -s -L -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/devrdtab/pwpqroom/actions/artifacts/$ARTIFACT_ID/zip" -o artifacts.zip

      - name: Extract Allure Results
        run: |
          rm -rf allure-results
          mkdir -p allure-results
          unzip -q artifacts.zip -d allure-results || echo "No artifacts to extract"
          ls -la allure-results

      - name: Store Allure History
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: allure-results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: allure-results

      - name: Run Tests
        if: github.event.inputs.deployment_target == 'Run All Tests'
        run: pytest --alluredir=allure-results
        continue-on-error: true

      - name: Store Test Results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: allure-results
          retention-days: 1
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate Allure Report
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          wget -q https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          tar -zxf allure-2.23.1.tgz -C /opt/
          ln -sf /opt/allure-2.23.1/bin/allure /usr/bin/allure

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: allure-results

      - name: Generate Allure Report
        run: |
          mkdir -p _site
          allure generate allure-results -o _site --clean
          ls -la _site

      - name: Store Allure History
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: allure-results
          retention-days: 1
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Publish Allure Report to GitHub Pages
    steps:
      - name: Download Generated Report
        uses: actions/download-artifact@v4
        with:
          name: _site-${{ github.run_id }}-${{ github.sha }}-${{ github.event.created_at }}-${{ github.workflow }}-${{ uuid }}
          path: _site

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
